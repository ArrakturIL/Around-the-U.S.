!function(){"use strict";var e={937:function(e,t,s){e.exports=s.p+"4e8e0a1d604782a0dff8.svg"}},t={};function s(r){var i=t[r];if(void 0!==i)return i.exports;var n=t[r]={exports:{}};return e[r](n,n.exports,s),n.exports}s.p="",function(){function e(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class t{constructor(e,t){this._formElement=t,this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._inputList=Array.from([...this._formElement.querySelectorAll(this._inputSelector)]),this._button=this._formElement.querySelector(this._submitButtonSelector)}_showInputError(e){this._errorElement=this._formElement.querySelector("#".concat(e.id,"-error")),this._errorElement.textContent=e.validationMessage,e.classList.add(this._inputErrorClass),this._errorElement.classList.add(this._errorClass)}_hideInputError(e){this._errorElement=this._formElement.querySelector("#".concat(e.id,"-error")),this._errorElement.textContent="",e.classList.remove(this._inputErrorClass),this._errorElement.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?(this._button.setAttribute("disabled",!0),this._button.classList.add(this._inactiveButtonClass)):(this._button.removeAttribute("disabled"),this._button.classList.remove(this._inactiveButtonClass))}_setEventListeners(){this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._setEventListeners(),this._toggleButtonState()}resetValidation(){this._toggleButtonState(),this._inputList.forEach((e=>{this._hideInputError(e)}))}}function r(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class i{constructor(e){r(this,"renderButtonText",(e=>{this._editSaveButton&&(this._editSaveButton.textContent=e)})),r(this,"_handleEscKey",(e=>{"Escape"===e.key&&this.close()})),r(this,"_handlerClickClose",(e=>{(e.target.classList.contains("popup_open")||e.target.classList.contains("popup__close"))&&this.close()})),this._popupSelector=e,this._popup=document.querySelector(this._popupSelector),this._editSaveButton=this._popup.querySelector(".edit-form__save")}open(){this._popup.classList.add("popup_open"),this.setEventListeners()}close(){this._popup.classList.remove("popup_open"),this.removeEventListeners()}setEventListeners(){this._popup.addEventListener("mousedown",this._handlerClickClose),document.addEventListener("keydown",this._handleEscKey)}removeEventListeners(){this._popup.removeEventListener("mousedown",this._handlerClickClose),document.removeEventListener("keydown",this._handleEscKey)}}class n extends i{constructor(e,t){var s,r;super(e),r=e=>{e.preventDefault(),this._handleSubmit(this._getInputValues())},(s="_handleSubmitForm")in this?Object.defineProperty(this,s,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[s]=r,this._formElement=this._popup.querySelector(".edit-form"),this._handleSubmit=t}_getInputValues(){const e=[...this._formElement.querySelectorAll(".edit-form__text-input")],t={};return e.forEach((e=>{t[e.name]=e.value})),t}close(){super.close(),this._formElement.reset()}setEventListeners(){super.setEventListeners(),this._formElement.addEventListener("submit",this._handleSubmitForm)}removeEventListeners(){super.removeEventListeners(),this._formElement.removeEventListener("submit",this._handleSubmitForm)}}class o{constructor(e,t,s,r,i,n,o){const{name:l,link:a,likes:c,_id:u,owner:_}=e;this._userId=t,this._title=l,this._img=a,this._cardSelector=s,this._handleCardClick=r,this._likeCountElement=i,this._handleDeleteClick=n,this._handleLikeClick=o,this._id=u,this._isOwner=_._id===this._userId,this._likeCount=c.length,this._likes=c,this._likedByOwner=this.isLiked()}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0)}generateCard(){this._card=this._getTemplate();const e=this._card.querySelector(".element__post-name");return this._cardImg=this._card.querySelector(".element__post-img"),this._deleteButton=this._card.querySelector(".element__delete"),this._likeButton=this._card.querySelector(".element__post-like"),this._likeCountElement=this._card.querySelector(".element__like-count"),e.textContent=this._title,this._cardImg.src=this._img,this._cardImg.alt=this._title,this._isOwner||this._deleteButton.remove(),this._setEventListeners(),this._renderLikes(),this._card}isLiked(){return this._likes.some((e=>e._id===this._userId))}_renderLikes(){const e=this._likeCount>0;this._likeCountElement.textContent=this._likeCount,this._likeCountElement.style.display=e?"block":"none",this.isLiked()?this._likeButton.classList.add("element__post-like_active"):this._likeButton.classList.remove("element__post-like_active")}updateLikes(e){this._likeCount=e.length,this._likes=e,this._renderLikes()}_setEventListeners(){this._likeButton.addEventListener("click",(()=>this._handleLikeClick(this._id,this))),this._isOwner&&this._deleteButton.addEventListener("click",(e=>this._handleDeleteClick(this._id,this._card))),this._cardImg.addEventListener("click",(()=>{this._handleCardClick()}))}}const l={formSelector:".edit-form",inputSelector:".edit-form__text-input",submitButtonSelector:".edit-form__save",inactiveButtonClass:"edit-form__save_disabled",inputErrorClass:"edit-form__input_type_error",errorClass:"edit-form__error_visible"},a=document.querySelector(".profile__edit-button"),c=document.querySelector(".profile__add-button"),u=document.querySelector(".popup_el_profile"),_=document.querySelector(".popup_el_new-place"),h=document.querySelector("#name"),d=document.querySelector("#about"),p=(_.querySelector("#title"),_.querySelector("#link"),document.querySelector(".profile__avatar-edit")),m=document.querySelector(".popup_el_avatar");var v=s(937);const E=new class{constructor(t,s){e(this,"_fetch",((e,t,s)=>fetch("".concat(this._url).concat(t),{method:e,headers:{authorization:this._token,"Content-Type":"application/json"},body:s&&JSON.stringify(s)}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status)))))),e(this,"_handleError",(e=>Promise.reject(e))),e(this,"init",(()=>Promise.all([this._getInitialCards(),this._getUserInfo()]))),e(this,"_getInitialCards",(()=>this._fetch("GET","/cards"))),e(this,"_getUserInfo",(()=>this._fetch("GET","/users/me"))),e(this,"updateUserInfo",(e=>{let{name:t,about:s}=e;return this._fetch("PATCH","/users/me",{name:t,about:s})})),e(this,"updateUserImage",(e=>this._fetch("PATCH","/users/me/avatar",{avatar:e}))),e(this,"addCard",((e,t)=>this._fetch("POST","/cards",{name:e,link:t}))),e(this,"deleteCard",(e=>this._fetch("DELETE","/cards/".concat(e)))),e(this,"likeCard",(e=>this._fetch("PUT","/cards/likes/".concat(e)))),e(this,"dislikeCard",(e=>this._fetch("DELETE","/cards/likes/".concat(e)))),this._url=t,this._token=s}}("https://around.nomoreparties.co/v1/group-12/","32f9436c-0893-4974-9272-aec5c5f4dcc9");E.init().then((e=>{let[t,s]=e;g.setUserInfo(s),g.setUserAvatar(s),y.setItems(t),y.renderItems()})).catch((e=>{console.log("Error.....: ".concat(e))})),document.querySelector("#logo").src=v;const f=e=>new o(e,g.getUserId(),"#card-template",(()=>{b.open(e)}),".element__like-count",w,x).generateCard(),S=new t(l,u),k=new t(l,_),C=new t(l,m),g=new class{constructor(e){let{nameSelector:t,aboutSelector:s,avatarSelector:r}=e;var i,n;n=()=>this._userId,(i="getUserId")in this?Object.defineProperty(this,i,{value:n,enumerable:!0,configurable:!0,writable:!0}):this[i]=n,this._nameElement=document.querySelector(t),this._aboutElement=document.querySelector(s),this._avatarElement=document.querySelector(r)}getUserInfo(){const e={};return e.name=this._nameElement.textContent,e.about=this._aboutElement.textContent,e}setUserInfo(e){let{name:t,about:s,_id:r}=e;this._nameElement.textContent=t,this._aboutElement.textContent=s,this._userId=r}setUserAvatar(e){let{avatar:t}=e;this._avatarElement.style.backgroundImage="url(".concat(t,")")}}({nameSelector:".profile__name",aboutSelector:".profile__about",avatarSelector:".profile__avatar"}),b=new class extends i{constructor(e){let{popupSelector:t,imageSelector:s,imageTitleSelector:r}=e;super(t),this._imageSelector=s,this._imageElement=this._popup.querySelector(this._imageSelector),this._titleElement=this._popup.querySelector(r)}open(e){let{name:t,link:s}=e;this._imageElement.src=s,this._titleElement.textContent=t,super.open()}}({popupSelector:".popup_el_preview",imageSelector:".popup__image",imageTitleSelector:".popup__description"}),y=new class{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}setItems(e){this._items=e}addItem(e){this._container.prepend(e)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}}({renderer:e=>{y.addItem(f(e))}},".elements"),L=new n(".popup_el_profile",(e=>{let{name:t,about:s}=e;L.renderButtonText("Saving..."),E.updateUserInfo({name:t,about:s}).then((()=>{g.setUserInfo({name:t,about:s}),L.close()})).catch((e=>{console.log("Error.....: ".concat(e))})).finally((()=>{L.renderButtonText("Save")}))})),I=new n(".popup_el_new-place",(e=>{let{title:t,link:s}=e;I.renderButtonText("Creating..."),E.addCard(t,s).then((e=>{y.addItem(f(e)),I.close()})).catch((e=>{console.log("Error.....: ".concat(e))})).finally((()=>{I.renderButtonText("Create")}))})),B=new n(".popup_el_avatar",(e=>{let{avatar:t}=e;B.renderButtonText("Saving..."),E.updateUserImage(t).then((e=>{g.setUserAvatar(e),B.close()})).catch((e=>{console.log("Error.....: ".concat(e))})).finally((()=>{B.renderButtonText("Save")}))})),q=new class extends i{constructor(e,t){var s,r;super(e),r=e=>{e.preventDefault(),this._handleConfirm(this._cardId,this._card),this.close()},(s="_handleConfirmClick")in this?Object.defineProperty(this,s,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[s]=r,this._popupSelector=e,this._popup=document.querySelector(this._popupSelector),this._handleConfirm=t,this._submitButton=this._popup.querySelector(".edit-form__save_el_delete")}open(e,t){this._cardId=e,this._card=t,super.open()}setEventListeners(){super.setEventListeners(),this._submitButton.addEventListener("click",this._handleConfirmClick,console.log("delete"))}close(){super.close(),this._submitButton.removeEventListener("click",this._handleConfirmClick)}}(".popup_el_delete",((e,t)=>{q.renderButtonText("Deliting..."),E.deleteCard(e).then((()=>{t.remove()})).catch((e=>{console.log("Error.....: ".concat(e))})).finally((()=>{q.renderButtonText("Delete")}))}));function w(e,t){q.open(e,t)}function x(e,t){const s=e=>t.updateLikes(e.likes);t.isLiked()?E.dislikeCard(e).then(s).catch((e=>{console.log("Error.....: ".concat(e))})):E.likeCard(e).then(s).catch((e=>{console.log("Error.....: ".concat(e))}))}a.addEventListener("click",(()=>{L.open(),function(){const{name:e,about:t}=g.getUserInfo();h.value=e,d.value=t}(),S.resetValidation()})),c.addEventListener("click",(()=>{k.resetValidation(),I.open()})),p.addEventListener("click",(()=>{C.resetValidation(),B.open()})),S.enableValidation(),k.enableValidation(),C.enableValidation()}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,